const Portfolio = props => {
  const { match } = props;

  let {autor} = match.params;
  return (
      <div>
          Portfolio component
          <p>Url params: {autor}</p>
      </div>
  );
};


const Portfolio = props => {
  const { match } = props;

  let {id} = match.params;
  return (
      <div>
          Portfolio component
          <p>Url params: {id}</p>
      </div>
  );
};


const Topics = props => {
  // The `path` lets us build <Route> paths that are
  // relative to the parent route, while the `url` lets
  // us build relative links.
  const { match } = props;

  let {autor} = match.params;
  let { path } = useRouteMatch();
  

  return (
    <div>     
      <Switch>
        <Route exact path={path}>
          <h3>Please select a topic.</h3>
        </Route>
        <Route path={`${path}/:topicId`}>
          <Topic />
        </Route>
      </Switch>
    </div>
  );
}

Para las rutas
 { `${props.match.url}/india` }

<script src='https://unpkg.com/react@16.3.1/umd/react.production.min.js'></script>
<script src='https://unpkg.com/react-dom@16.3.1/umd/react-dom.production.min.js'></script>
<script src='https://unpkg.com/react-router@5.1.2/umd/react-router.min.js'></script>
<script src='https://unpkg.com/react-router-dom@5.1.2/umd/react-router-dom.min.js'></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/prop-types/15.7.2/prop-types.min.js"></script>
<script src='https://unpkg.com/babel-standalone@6.26.0/babel.js'></script>